{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "administratorLogin": {
            "type": "string",
            "metadata": {
                "description": "The SQL Server administrator login"
            }
        },
        "administratorLoginPassword": {
            "type": "securestring",
            "metadata": {
                "description": "The SQL Server administrator login password."
            }
        },
        "serverName": {
            "type": "string",
            "metadata": {
                "description": "The SQL Server name."
            }
        },
        "enableAds": {
            "type": "bool",
            "defaultValue": true,
            "allowedValues": [
                true,
                false
            ],
            "metadata": {
                "description": "Enable Advanced Data Security and some security default policies."
            }
        },
        "enableVa": {
            "type": "bool",
            "defaultValue": true,
            "allowedValues": [
                true,
                false
            ],
            "metadata": {
                "description": "Enable Vulnerability Assessment scans."
            }
        },
        "tier": {
            "type": "string",
            "defaultValue": "Standard",
            "metadata": {
                "description": "Database server Tier. Basic, Standard (S0), Premium (P1)"
            },
            "allowedValues": [
                "Basic",
                "Standard",
                "Premium",
                "GeneralPurpose",
                "BusinessCritical"
            ]
        },
        "maxSizeBytes": {
            "type": "int"
        },
        "dbSkuName": {
            "type": "string",
            "defaultValue": "S0",
            "metadata": {
                "description": "Database tier SKU identifier. Basic. Standard (S0), Premium (P1). If selecting 'Yes' to ElasticPool, you MUST select ElasticPool as the SKU Name."
            },
            "allowedValues": [
                "Basic",
                "ElasticPool",
                "S0",
                "S1",
                "S2",
                "S3",
                "S4",
                "S6",
                "S7",
                "S9",
                "S12",
                "P1",
                "P2",
                "P4",
                "P6",
                "P11",
                "P15",
                "GP_Gen4_1",
                "GP_Gen4_2",
                "GP_Gen4_3",
                "GP_Gen4_4",
                "GP_Gen4_5",
                "GP_Gen4_6",
                "GP_Gen4_7",
                "GP_Gen4_8",
                "GP_Gen4_9",
                "GP_Gen4_10",
                "GP_Gen4_16",
                "GP_Gen4_24",
                "GP_Gen5_2",
                "GP_Gen5_4",
                "GP_Gen5_6",
                "GP_Gen5_8",
                "GP_Gen5_10",
                "GP_Gen5_12",
                "GP_Gen5_14",
                "GP_Gen5_16",
                "GP_Gen5_18",
                "GP_Gen5_20",
                "GP_Gen5_24",
                "GP_Gen5_32",
                "GP_Gen5_40",
                "GP_Gen5_80",
                "BC_Gen4_1",
                "BC_Gen4_2",
                "BC_Gen4_3",
                "BC_Gen4_4",
                "BC_Gen4_5",
                "BC_Gen4_6",
                "BC_Gen4_7",
                "BC_Gen4_8",
                "BC_Gen4_9",
                "BC_Gen4_10",
                "BC_Gen4_16",
                "BC_Gen4_24",
                "BC_Gen5_2",
                "BC_Gen5_4",
                "BC_Gen5_6",
                "BC_Gen5_8",
                "BC_Gen5_10",
                "BC_Gen5_12",
                "BC_Gen5_14",
                "BC_Gen5_16",
                "BC_Gen5_18",
                "BC_Gen5_20",
                "BC_Gen5_24",
                "BC_Gen5_32",
                "BC_Gen5_40",
                "BC_Gen5_80"
            ]
        },
        "databaseNames": {
            "type": "array",
            "defaultValue": [
                "db1",
                "db2"
            ],
            "metadata": {
                "description": "The SQL Databases names."
            }
        },
        "databaseCollation": {
            "type": "string",
            "defaultValue": "SQL_Latin1_General_CP1_CI_AS",
            "metadata": {
                "description": "The SQL Database collation."
            }
        },
        "alertEmailAddresses": {
            "type": "array",
            "defaultValue": [
                "user1@example.com",
                "user2@example.com"
            ],
            "metadata": {
                "description": "Email addresses for receiving alerts"
            }
        },
        "readScaleOut": {
            "type": "string",
            "defaultValue": "Disabled",
            "allowedValues": [
                "Enabled",
                "Disabled"
            ],
            "metadata": {
                "description": "Enable Read Scale-out."
            }
        },
        "zoneRedundant": {
            "type": "bool",
            "defaultValue": false,
            "allowedValues": [
                true,
                false
            ],
            "metadata": {
                "description": "Would you like to make this elastic pool/database(s) zone redundant?."
            }
        },
        "numberOfReplicas": {
            "type": "int",
            "defaultValue": 0,
            "allowedValues": [
                0,
                1
            ],
            "metadata": {
                "description": "If Zone Redundant is True, set numberOfReplicas to 1."
            }
        }
    },
    "variables": {
        "resourceGroupLocation": "[resourceGroup().location]",
        "sqlVaStorage": "[tolower(concat('sqlva', variables('uniqueStorage')))]",
        "uniqueStorage": "[concat('sa', uniqueString(resourceGroup().id, deployment().name))]"
    },
    "resources": [
        {
            "condition": "[parameters('enableVA')]",
            "apiVersion": "2016-01-01",
            "type": "Microsoft.Storage/storageAccounts",
            "name": "[variables('sqlVaStorage')]",
            "location": "[variables('resourceGroupLocation')]",
            "sku": {
                "name": "Standard_LRS"
            },
            "kind": "Storage",
            "properties": {
            }
        },
        {
            "apiVersion": "2017-10-01-preview",
            "location": "[variables('resourceGroupLocation')]",
            "name": "[parameters('serverName')]",
            "properties": {
                "administratorLogin": "[parameters('administratorLogin')]",
                "administratorLoginPassword": "[parameters('administratorLoginPassword')]",
                "version": "12.0"
            },
            "type": "Microsoft.Sql/servers",
            "resources": [
                {
                    "condition": "[parameters('enableADS')]",
                    "apiVersion": "2017-03-01-preview",
                    "type": "securityAlertPolicies",
                    "name": "Default",
                    "dependsOn": [
                        "[concat('Microsoft.Sql/servers/', parameters('serverName'))]"
                    ],
                    "properties": {
                        "state": "Enabled",
                        "disabledAlerts": [
                        ],
                        "emailAddresses": "[parameters('alertEmailAddresses')]",
                        "emailAccountAdmins": true
                    }
                },
                {
                    "condition": "[parameters('enableVA')]",
                    "apiVersion": "2018-06-01-preview",
                    "type": "vulnerabilityAssessments",
                    "name": "Default",
                    "properties": {
                        "storageContainerPath": "[if(parameters('enableVA'), concat(reference(variables('sqlVaStorage'), '2018-02-01').primaryEndpoints.blob, 'vulnerability-assessment'), '')]",
                        "storageAccountAccessKey": "[if(parameters('enableVA'), listKeys(variables('sqlVaStorage'), '2018-02-01').keys[0].value, '')]",
                        "recurringScans": {
                            "isEnabled": true,
                            "emailSubscriptionAdmins": true,
                            "emails": "[parameters('alertEmailAddresses')]"
                        }
                    },
                    "dependsOn": [
                        "[concat('Microsoft.Sql/servers/', parameters('serverName'))]",
                        "[concat('Microsoft.Storage/storageAccounts/', variables('sqlVaStorage'))]",
                        "[concat('Microsoft.Sql/servers/', parameters('serverName'), '/securityAlertPolicies/Default')]"
                    ]
                },
                {
                    "type": "auditingSettings",
                    "name": "SQLAuditingSettings",
                    "apiVersion": "2017-03-01-preview",
                    "dependsOn": [
                        "[resourceId('Microsoft.Sql/servers', parameters('servername'))]",
                        "[concat('Microsoft.Storage/storageAccounts/', variables('sqlVaStorage'))]",
                        "[concat('Microsoft.Sql/servers/', parameters('serverName'), '/vulnerabilityAssessments/Default')]"
                    ],
                    "properties": {
                        "state": "Enabled",
                        "storageEndpoint": "[reference(resourceId('Microsoft.Storage/storageAccounts', variables('sqlVaStorage')), '2018-03-01-preview').primaryEndpoints.blob]",
                        "storageAccountAccessKey": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('sqlVaStorage')), '2018-03-01-preview').keys[0].value]",
                        "storageAccountSubscriptionId": "[subscription().subscriptionId]",
                        "auditActionsAndGroups": null,
                        "isStorageSecondaryKeyInUse": false
                    }
                }
            ]
        },
        {
            "type": "Microsoft.Sql/servers/advisors",
            "name": "[concat(parameters('servername'), '/', 'ForceLastGoodPlan')]",
            "apiVersion": "2014-04-01",
            "scale": null,
            "properties": {
                "autoExecuteValue": "Enabled"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servername'))]",
                "[concat('Microsoft.Sql/servers/', parameters('serverName'), '/securityAlertPolicies/Default')]"
            ]
        },
        {
            "type": "Microsoft.Sql/servers/advisors",
            "name": "[concat(parameters('servername'), '/', 'CreateIndex')]",
            "apiVersion": "2014-04-01",
            "scale": null,
            "properties": {
                "autoExecuteValue": "Enabled"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servername'))]",
                "[concat('Microsoft.Sql/servers/', parameters('serverName'), '/advisors/ForceLastGoodPlan')]"
            ]
        },
        {
            "type": "Microsoft.Sql/servers/advisors",
            "name": "[concat(parameters('servername'), '/', 'DropIndex')]",
            "apiVersion": "2014-04-01",
            "scale": null,
            "properties": {
                "autoExecuteValue": "Disabled"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servername'))]",
                "[concat('Microsoft.Sql/servers/', parameters('serverName'), '/advisors/CreateIndex')]"
            ]
        },
        {
            "type": "Microsoft.Sql/servers/databases",
            "name": "[concat(parameters('serverName'), '/', parameters('databaseNames')[copyIndex()])]",
            "location": "[variables('resourceGroupLocation')]",
            "apiVersion": "2017-10-01-preview",
            "dependsOn": [
                "[concat('Microsoft.Sql/servers/', parameters('serverName'))]"
            ],
            "sku": {
                "name": "[parameters('dbSkuName')]",
                "tier": "[parameters('tier')]"
            },
            "properties": {
                "collation": "[parameters('databaseCollation')]",
                "maxSizeBytes": "[parameters('maxSizeBytes')]",
                "zoneRedundant": "[parameters('zoneRedundant')]",
                "readScale": "[parameters('readScaleOut')]",
                "readReplicaCount": "[parameters('numberOfReplicas')]",




            },
            "copy": {
                "name": "addDatabases",
                "count": "[length(parameters('databaseNames'))]"
            }
        },
        {
            "apiVersion": "2014-04-01-preview",
            "dependsOn": [
                "[concat('Microsoft.Sql/servers/', parameters('serverName'))]"
            ],
            "location": "[variables('resourceGroupLocation')]",
            "name": "[concat(parameters('serverName'), '/', 'AllowAllWindowsAzureIps')]",
            "properties": {
                "endIpAddress": "0.0.0.0",
                "startIpAddress": "0.0.0.0"
            },
            "type": "Microsoft.Sql/servers/firewallrules"
        }
    ]
}